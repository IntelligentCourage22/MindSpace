{"ast":null,"code":"import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\nexport function formatDate(date) {\n  return new Date(date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n}\nexport function formatDateTime(date) {\n  return new Date(date).toLocaleString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\nexport function getMoodEmoji(mood) {\n  const moodEmojis = {\n    1: '😢',\n    2: '😔',\n    3: '😐',\n    4: '😊',\n    5: '😄'\n  };\n  return moodEmojis[mood] || '😐';\n}\nexport function getMoodColor(mood) {\n  const moodColors = {\n    1: 'text-red-500',\n    2: 'text-orange-500',\n    3: 'text-yellow-500',\n    4: 'text-green-500',\n    5: 'text-blue-500'\n  };\n  return moodColors[mood] || 'text-gray-500';\n}\nexport function getMoodLabel(mood) {\n  const moodLabels = {\n    1: 'Very Low',\n    2: 'Low',\n    3: 'Neutral',\n    4: 'Good',\n    5: 'Excellent'\n  };\n  return moodLabels[mood] || 'Unknown';\n}\nexport function calculateStreak(entries) {\n  if (!entries || entries.length === 0) return 0;\n  const sortedEntries = entries.sort((a, b) => new Date(b.date) - new Date(a.date));\n  let streak = 0;\n  let currentDate = new Date();\n  for (const entry of sortedEntries) {\n    const entryDate = new Date(entry.date);\n    const daysDiff = Math.floor((currentDate - entryDate) / (1000 * 60 * 60 * 24));\n    if (daysDiff === streak) {\n      streak++;\n      currentDate = entryDate;\n    } else {\n      break;\n    }\n  }\n  return streak;\n}\nexport function generateRandomAlias() {\n  const adjectives = ['Blue', 'Green', 'Red', 'Purple', 'Golden', 'Silver', 'Bright', 'Dark', 'Swift', 'Gentle', 'Brave', 'Kind', 'Wise', 'Calm', 'Strong', 'Peaceful', 'Serene', 'Hopeful', 'Radiant', 'Luminous', 'Tranquil', 'Harmonious'];\n  const nouns = ['Phoenix', 'Dragon', 'Eagle', 'Wolf', 'Bear', 'Lion', 'Tiger', 'Fox', 'Owl', 'Dove', 'Butterfly', 'Star', 'Moon', 'Sun', 'Ocean', 'Mountain', 'River', 'Forest', 'Garden', 'Flower', 'Tree', 'Cloud'];\n  const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n  const noun = nouns[Math.floor(Math.random() * nouns.length)];\n  const number = Math.floor(Math.random() * 900) + 100;\n  return `${adjective}${noun}${number}`;\n}\nexport function debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\nexport function throttle(func, limit) {\n  let inThrottle;\n  return function () {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n}","map":{"version":3,"names":["clsx","twMerge","cn","inputs","formatDate","date","Date","toLocaleDateString","year","month","day","formatDateTime","toLocaleString","hour","minute","getMoodEmoji","mood","moodEmojis","getMoodColor","moodColors","getMoodLabel","moodLabels","calculateStreak","entries","length","sortedEntries","sort","a","b","streak","currentDate","entry","entryDate","daysDiff","Math","floor","generateRandomAlias","adjectives","nouns","adjective","random","noun","number","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","throttle","limit","inThrottle","arguments","context","apply"],"sources":["C:/Users/ansh0/Desktop/Python/MindSpace/frontend/src/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function formatDate(date) {\r\n  return new Date(date).toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  });\r\n}\r\n\r\nexport function formatDateTime(date) {\r\n  return new Date(date).toLocaleString('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  });\r\n}\r\n\r\nexport function getMoodEmoji(mood) {\r\n  const moodEmojis = {\r\n    1: '😢',\r\n    2: '😔',\r\n    3: '😐',\r\n    4: '😊',\r\n    5: '😄',\r\n  };\r\n  return moodEmojis[mood] || '😐';\r\n}\r\n\r\nexport function getMoodColor(mood) {\r\n  const moodColors = {\r\n    1: 'text-red-500',\r\n    2: 'text-orange-500',\r\n    3: 'text-yellow-500',\r\n    4: 'text-green-500',\r\n    5: 'text-blue-500',\r\n  };\r\n  return moodColors[mood] || 'text-gray-500';\r\n}\r\n\r\nexport function getMoodLabel(mood) {\r\n  const moodLabels = {\r\n    1: 'Very Low',\r\n    2: 'Low',\r\n    3: 'Neutral',\r\n    4: 'Good',\r\n    5: 'Excellent',\r\n  };\r\n  return moodLabels[mood] || 'Unknown';\r\n}\r\n\r\nexport function calculateStreak(entries) {\r\n  if (!entries || entries.length === 0) return 0;\r\n  \r\n  const sortedEntries = entries.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n  let streak = 0;\r\n  let currentDate = new Date();\r\n  \r\n  for (const entry of sortedEntries) {\r\n    const entryDate = new Date(entry.date);\r\n    const daysDiff = Math.floor((currentDate - entryDate) / (1000 * 60 * 60 * 24));\r\n    \r\n    if (daysDiff === streak) {\r\n      streak++;\r\n      currentDate = entryDate;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  \r\n  return streak;\r\n}\r\n\r\nexport function generateRandomAlias() {\r\n  const adjectives = [\r\n    'Blue', 'Green', 'Red', 'Purple', 'Golden', 'Silver', 'Bright', 'Dark',\r\n    'Swift', 'Gentle', 'Brave', 'Kind', 'Wise', 'Calm', 'Strong', 'Peaceful',\r\n    'Serene', 'Hopeful', 'Radiant', 'Luminous', 'Tranquil', 'Harmonious'\r\n  ];\r\n  const nouns = [\r\n    'Phoenix', 'Dragon', 'Eagle', 'Wolf', 'Bear', 'Lion', 'Tiger', 'Fox',\r\n    'Owl', 'Dove', 'Butterfly', 'Star', 'Moon', 'Sun', 'Ocean', 'Mountain',\r\n    'River', 'Forest', 'Garden', 'Flower', 'Tree', 'Cloud'\r\n  ];\r\n  \r\n  const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\r\n  const noun = nouns[Math.floor(Math.random() * nouns.length)];\r\n  const number = Math.floor(Math.random() * 900) + 100;\r\n  \r\n  return `${adjective}${noun}${number}`;\r\n}\r\n\r\nexport function debounce(func, wait) {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\nexport function throttle(func, limit) {\r\n  let inThrottle;\r\n  return function() {\r\n    const args = arguments;\r\n    const context = this;\r\n    if (!inThrottle) {\r\n      func.apply(context, args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}